apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: timetracker
data:
  DB_HOST: postgresql-service
  DB_PORT: "5432"
  DB_NAME: timetracker
  DB_USERNAME: timetracker
  KEYCLOAK_HOST: idp.localhost
  KEYCLOAK_REALM: tt-realm
  KEYCLOAK_CLIENT_ID: PEAX-agent
  CORS_ALLOWED_ORIGINS: "http://localhost:4200,http://timetracker-frontend:80"
---
apiVersion: v1
kind: Secret
metadata:
  name: backend-secrets
  namespace: timetracker
type: Opaque
data:
  DB_PASSWORD: dGltZXRyYWNrZXI=  # base64 encoded "timetracker"
  KEYCLOAK_CLIENT_SECRET: YjFjODRlYTItMzJmMi00MjI5LWExYzEtMDllNWMyOTM2M2I2  # base64 encoded secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: timetracker-backend
  namespace: timetracker
  labels:
    app: timetracker-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: timetracker-backend
  template:
    metadata:
      labels:
        app: timetracker-backend
    spec:
      containers:
      - name: timetracker-backend
        image: timetracker-backend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "production"
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_NAME
        - name: DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: DB_PASSWORD
        - name: KEYCLOAK_HOST
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: KEYCLOAK_HOST
        - name: KEYCLOAK_REALM
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: KEYCLOAK_REALM
        - name: KEYCLOAK_CLIENT_ID
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: KEYCLOAK_CLIENT_ID
        - name: KEYCLOAK_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: KEYCLOAK_CLIENT_SECRET
        - name: CORS_ALLOWED_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: CORS_ALLOWED_ORIGINS
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
      initContainers:
      - name: wait-for-db
        image: postgres:15-alpine
        command: ['sh', '-c']
        args:
        - |
          until pg_isready -h postgresql-service -p 5432 -U timetracker; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done
          echo "PostgreSQL is ready!"
---
apiVersion: v1
kind: Service
metadata:
  name: timetracker-backend-service
  namespace: timetracker
  labels:
    app: timetracker-backend
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: timetracker-backend
