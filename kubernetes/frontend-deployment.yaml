apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  namespace: timetracker
data:
  API_URL: "http://timetracker-backend-service:8080/api"
  KEYCLOAK_URL: "http://idp.localhost"
  KEYCLOAK_REALM: "tt-realm"
  KEYCLOAK_CLIENT_ID: "PEAX-agent"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: timetracker-frontend
  namespace: timetracker
  labels:
    app: timetracker-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: timetracker-frontend
  template:
    metadata:
      labels:
        app: timetracker-frontend
    spec:
      containers:
      - name: timetracker-frontend
        image: timetracker-frontend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        env:
        - name: API_URL
          valueFrom:
            configMapKeyRef:
              name: frontend-config
              key: API_URL
        - name: KEYCLOAK_URL
          valueFrom:
            configMapKeyRef:
              name: frontend-config
              key: KEYCLOAK_URL
        - name: KEYCLOAK_REALM
          valueFrom:
            configMapKeyRef:
              name: frontend-config
              key: KEYCLOAK_REALM
        - name: KEYCLOAK_CLIENT_ID
          valueFrom:
            configMapKeyRef:
              name: frontend-config
              key: KEYCLOAK_CLIENT_ID
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: timetracker
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log warn;

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;

        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;

        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        server {
            listen 80;
            server_name localhost;
            root /usr/share/nginx/html;
            index index.html;

            location / {
                try_files $uri $uri/ /index.html;
            }

            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }

            location ~* \.html$ {
                expires 1h;
                add_header Cache-Control "public";
            }

            location /api/ {
                proxy_pass http://timetracker-backend-service:8080;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }

            error_page 404 /index.html;
            error_page 500 502 503 504 /50x.html;
            
            location = /50x.html {
                root /usr/share/nginx/html;
            }
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: timetracker-frontend-service
  namespace: timetracker
  labels:
    app: timetracker-frontend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: timetracker-frontend
